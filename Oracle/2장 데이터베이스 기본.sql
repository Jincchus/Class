/**
    날짜 : 2023/10/02
    이름 : 박경진
    내용 : 2장 데이터베이스 기본
*/

//테이블 생성
CREATE TABLE USER1 (
    ID      VARCHAR2(20),
    NAME    VARCHAR2(20),
    HP      CHAR(13),
    AGE     NUMBER
);
//테이블 삭제
DROP TABLE USER1;

//데이터 추가(INSERT)
INSERT INTO USER1 VALUES ('A101','김유신','010-1234-1111',25);
INSERT INTO USER1 VALUES ('A102','김춘추','010-1234-2222',23);
INSERT INTO USER1 VALUES ('A103','장보고','010-1234-3333',32);
INSERT INTO USER1 (id, name, age) VALUES ('A104', '강감찬', 45);
INSERT INTO USER1 (id, name, hp) VALUES ('A105', '이순신', '010-1234-5555');

//데이터 조회(SELECT)
SELECT * FROM USER1;
SELECT * FROM USER1 WHERE id='A101';
SELECT * FROM USER1 WHERE name='김춘추';
SELECT * FROM USER1 WHERE age>30;
SELECT id, name, age FROM USER1;

//데이터 수정(UPDATE)
UPDATE User1 SET hp='010-1234-4444' WHERE id='A104';
UPDATE User1 SET age=51 WHERE id='A105';
UPDATE User1 SET hp='010-1234-1001', age=27 WHERE id='A101';

//데이터 삭제(DELETE)
DELETE FROM USER1 WHERE id='A101';
DELETE FROM USER1 WHERE id='A102' AND age=25;
DELETE FROM USER1 WHERE age >= 30;

/*
    날짜 : 2023/10/04
    이름 : 박경진
    내용 : 제약조건
*/

// 실습 2-1. 기본키 실습
CREATE TABLE USER2 (
    ID     VARCHAR2(20) PRIMARY KEY,
    NAME    VARCHAR2(20),
    HP      CHAR(13),
    AGE     NUMBER(2)
    );

// 데이터 추가(INSERT)
INSERT INTO USER2 VALUES ('A101','김유신','010-1234-1001',27);
INSERT INTO USER2 VALUES ('A102','김춘추','010-1234-2222',23);
INSERT INTO USER2 VALUES ('A103','장보고','010-1234-3333',32);
INSERT INTO USER2 VALUES ('A104','강감찬','010-1234-4444',45);
INSERT INTO USER2 VALUES ('A105','이순신','010-1234-5555',51 );

// 실습 2-2. 고유키 실습
CREATE TABLE USER3 (
    ID      VARCHAR2(20) PRIMARY KEY,
    NAME    VARCHAR2(20),
    HP      CHAR(13) UNIQUE,
    AGE     NUMBER(3)
    );
// 데이터 추가(INSERT)
INSERT INTO USER3 VALUES ('A101','김유신','010-1234-1001',27);
INSERT INTO USER3 VALUES ('A102','김춘추','010-1234-2222',23);
INSERT INTO USER3 VALUES ('A103','장보고','010-1234-3333',32);
INSERT INTO USER3 VALUES ('A104','강감찬','010-1234-4444',45);
INSERT INTO USER3 VALUES ('A105','이순신','010-1234-5555',51 );

// 실습 2-3. 외래키(Foreign Key)
CREATE TABLE PARENT(
    PID     VARCHAR2(20) PRIMARY KEY,
    NAME    VARCHAR2(20),
    HP      CHAR(13) UNIQUE
    );

CREATE TABLE CHILD(
    CID     VARCHAR2(20) PRIMARY KEY,
    NAME    VARCHAR2(20),
    HP      CHAR(13) UNIQUE,
    PARENT  VARCHAR2(20),
    FOREIGN KEY (PARENT) REFERENCES PARENT (PID)
    );

INSERT INTO PARENT VALUES ('P101','김서현','010-1234-1001');
INSERT INTO PARENT VALUES ('P102','이성계','010-1234-1002');
INSERT INTO PARENT VALUES ('P103','신사임당','010-1234-1003');

INSERT INTO CHILD VALUES ('C101','김유신','010-1234-2001','P101');
INSERT INTO CHILD VALUES ('C102','이방우','010-1234-2002','P102');
INSERT INTO CHILD VALUES ('C103','이방원','010-1234-2003','P102');
INSERT INTO CHILD VALUES ('C104','이이','010-1234-2004','P103');

// 실습 2-4. DEFAULT와 NOT NULL
CREATE TABLE USER4 (
    NAME    VARCHAR2(20) NOT NULL,
    GENDER  CHAR(1) NOT NULL,
    AGE     INT DEFAULT 1,
    ADDR    VARCHAR2(255)
    );

INSERT INTO USER4 VALUES ('김유신','M',23,'김해시');
INSERT INTO USER4 VALUES ('김춘추','M',21,'경주시');
INSERT INTO USER4 (NAME,GENDER,ADDR) VALUES ('신사임당','F','강릉시');
INSERT INTO USER4 (NAME,GENDER) VALUES ('이순신','M');
INSERT INTO USER4 (NAME,GENDER,AGE) VALUES ('정약용','M',33); //NULL 값 안됨

// 실습 2-5. CHECK 실습
CREATE TABLE USER5(
    NAME    VARCHAR2(20) NOT NULL,
    GENDER  CHAR(1) NOT NULL CHECK(GENDER IN('M', 'F')),
    AGE     INT DEFAULT 1 CHECK(AGE > 0 AND AGE < 100),
    ADDR    VARCHAR2(255)
    );

INSERT INTO USER5 VALUES ('김유신','M',23,'김해시');
INSERT INTO USER5 VALUES ('김춘추','M',21,'경주시');
INSERT INTO USER5 (NAME,GENDER,ADDR) VALUES ('신사임당','F','강릉시');
INSERT INTO USER5 (NAME,GENDER) VALUES ('이순신','M');
INSERT INTO USER5 (NAME,GENDER,AGE) VALUES ('정약용','M',33);

/* 실습 3-1. 데이터 사전 조회 */
/* 전체 사전 조회 */
SELECT * FROM DICT;
/* 테이블 조회(현재 사용자 기준) */
SELECT TABLE_NAME FROM ALL_ALL_TABLES ;
/* 전체 테이블 조회(현재 사용자 기준) */
SELECT OWNER, TABLE_NAME FROM ALL_ALL_TABLES ;
/* 전체 테이블 조회(system 관리자만 가능) */
SELECT * FROM DBA_TABLES;
/* 전체 사용자 조회(system 관리자만 가능) */
SELECT * FROM DBA_USERS;

/* 실습 3-2. 인덱스 조회/생성/삭제 */
/* 현재 사용자 인덱스 조회 */
SELECT * FROM user_indexes;
/* 현재 사용자 인덱스 정보 조회 */
SELECT * FROM USER_IND_COLUMNS ;
/* 인덱스 생성 */
CREATE INDEX IDX_USER1_ID ON USER1(ID);
SELECT * FROM USER_IND_COLUMNS ;
/* 인덱스 삭제 */
DROP INDEX IDX_USER1_ID;
SELECT * FROM USER_IND_COLUMNS ;

/* 실습 3-3. 뷰 생성 권한 할당 */
GRANT CREATE VIEW TO scott;

/* 실습 3-4. 뷰 생성/조회/삭제 */
/* 뷰 생성 */
CREATE VIEW VM_USER1 AS (SELECT NAME, HP, AGE FROM USER1);
CREATE VIEW VM_USER2_AGE_UNDER30 AS (
	SELECT * FROM USER2 WHERE AGE < 30 
);
SELECT * FROM USER_VIEWS ;
/* 뷰 조회 */
SELECT * FROM VM_USER1;
SELECT * FROM VM_USER2_AGE_UNDER30;
/* 뷰 삭제 */
DROP VIEW VM_USER1 ;
DROP VIEW VM_USER2_AGE_UNDER30 ;

/* 실습 3-5. 시퀀스 적용 테이블 생성 */
CREATE TABLE USER6 (
	SEQ		NUMBER PRIMARY KEY,
	NAME	VARCHAR2(20),
	GENDER	CHAR(1),
	AGE		NUMBER,
	ADDR	VARCHAR2(255)
);

/* 실습 3-6. 시퀀스 생성 */
CREATE SEQUENCE SEQ_USER6 INCREMENT BY 1 START WITH 1;

/* 실습 3-7. 시퀀스값 입력 */
INSERT INTO USER6 VALUES (SEQ_USER6.NEXTVAL, '김유신', 'M', 25, '김해시');
INSERT INTO USER6 VALUES (SEQ_USER6.NEXTVAL, '김춘추', 'M', 23, '경주시');
INSERT INTO USER6 VALUES (SEQ_USER6.NEXTVAL, '신사임당', 'F', 27, '강릉시');

/* 사용자와 권한 */
/* 실습 4-1. 사용자 생성(SYSTEM 접속) */
/* 사용자 생성 */
ALTER SESSION SET "_ORACLE_SCRIPT"=TRUE ;
CREATE USER SOON IDENTIFIED BY "1234";

/* 실습 4-2. 사용자 조회 */
/* 전체 사용자 조회 */
SELECT * FROM ALL_USERS;
/* 특정 사용자 조회 */
SELECT * FROM ALL_USERS WHERE USERNAME='BACCHUS';

/* 실습 4-3. 사용자 변경 */
/* 사용자 비밀번호 변경 */
ALTER USER SOON IDENTIFIED BY "4321";
/* 사용자 삭제 */
DROP USER SOON;
/* 사용자와 해당 사용자 객체(테이블 등) 모두 삭제 */
DROP USER SOON CASCADE;

/* 실습 4-4. Role 부여 */
/* 접속 및 생성 권한 부여 */
GRANT CONNECT, RESOURCE TO SOON;
/* 테이블 스페이스(테이블 파일 생성 공간) 할당량 권한 부여 */
GRANT UNLIMITED TABLESPACE TO SOON;

















