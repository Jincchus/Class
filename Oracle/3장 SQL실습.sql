/* 실습 1-1. 실습 테이블 생성 */
/* 부서 테이블 */
CREATE TABLE DEPT (
	DEPTNO	NUMBER(2) CONSTRAINT PK_DEPT PRIMARY KEY,
	DNAME	VARCHAR2(14),
	LOC		VARCHAR2(13)
);

/* 직원 테이블 */
CREATE TABLE EMP (
	EMPNO	 NUMBER(4) CONSTRAINT PK_EMP PRIMARY KEY,
	ENAME	 VARCHAR2(10),
	JOB		 VARCHAR2(9),
	MGR		 NUMBER(4),
	HIREDATE DATE,
	SAL		 NUMBER(7,2),
	COMM	 NUMBER(7,2),
	DEPTNO	 NUMBER(2) CONSTRAINT FK_DEPTNO REFERENCES DEPT
);

/* 급여 테이블 */
CREATE TABLE SALGRADE (
	GRADE NUMBER,
	LOSAL NUMBER,
	HISAL NUMBER
);

/* 보너스 테이블 */
CREATE TABLE BONUS (
	ENAME	VARCHAR2(10),
	JOB		VARCHAR2(9),
	SAL		NUMBER,
	COMM	NUMBER
);

/* 실습하기 1-2. 실습 테이블 데이터 입력 */
/* 부서 테이블 데이터 입력 */
INSERT INTO DEPT VALUES (10,'ACCOUNTTING','NEW YORK');
INSERT INTO DEPT VALUES (20,'RESEARCH','DALLAS');
INSERT INTO DEPT VALUES (30,'SALES','CHICAGO');
INSERT INTO DEPT VALUES (40,'OPERATIONS','BOSTON');
/* 직원 테이블 데이터 입력 */
INSERT INTO EMP VALUES (7369,'SMITH','CLERK',7902,'80-12-17',800,NULL,20);
INSERT INTO EMP VALUES (7499,'ALLEN','SALESMAN',7698,'81-02-20',1600,300,30);
INSERT INTO EMP VALUES (7521,'WARD','SALESMAN',7698,'81-02-22',1250,500,30);
INSERT INTO EMP VALUES (7566,'JONES','MANAGER',7839,'81-02-04',2975,NULL,20);
INSERT INTO EMP VALUES (7654,'MARTIN','SALESMAN',7698,'81-09-28',1250,1400,30);
INSERT INTO EMP VALUES (7698,'BLAKE','MANAGER',7839,'81-05-01',2850,NULL,30);
INSERT INTO EMP VALUES (7782,'CLARK','MANAGER',7839,'81-06-09',2450,NULL,10);
INSERT INTO EMP VALUES (7788,'SCOTT','ANALYST',7566,'87-04-19',3000,NULL,20);
INSERT INTO EMP VALUES (7839,'KING','PRESIDENT',NULL,'81-11-17',5000,NULL,10);
INSERT INTO EMP VALUES (7844,'TURNER','SALESMAN',7698,'81-09-08',1500,0,30);
INSERT INTO EMP VALUES (7876,'ADAMS','CLERK',7788,'87-05-23',1100,NULL,20);
INSERT INTO EMP VALUES (7900,'JAMES','CLERK',7698,'81-12-03',950,NULL,30);
INSERT INTO EMP VALUES (7902,'FORD','ANALYST',7566,to_date('3-12-1981', 'dd-mm-yyyy'),3000,NULL,20);
INSERT INTO EMP VALUES (7934,'MILLER','CLERK',7782,to_date('23-1-1982', 'dd-mm-yyyy'),1300,NULL,10);
/* 급여 등급 테이블 데이터 입력 */
INSERT INTO SALGRADE VALUES (1, 700,1200);
INSERT INTO SALGRADE VALUES (2,1201,1400);
INSERT INTO SALGRADE VALUES (3,1401,2000);
INSERT INTO SALGRADE VALUES (4,2001,3000);
INSERT INTO SALGRADE VALUES (5,3001,9999);

/* 실습 1-3. 기본 데이터 조회 */
SELECT * FROM EMP;
SELECT EMPNO, ENAME, DEPTNO FROM EMP;

/* 실습 1-4. 데이터 조회 정렬 */
SELECT * FROM EMP ORDER BY SAL;
SELECT * FROM EMP ORDER BY SAL DESC;
SELECT * FROM EMP ORDER BY DEPTNO ASC, SAL DESC;

/* 실습 1-5. 중복제거와 별칭 지정 */
SELECT DISTINCT DEPTNO FROM EMP;
SELECT DISTINCT JOB, DEPTNO FROM EMP;
SELECT ENAME, SAL, SAL*12+COMM, COMM FROM EMP;
SELECT ENAME, SAL, SAL*12+COMM AS ANNSAL, COMM FROM EMP;

/* 실습 2-1. 다양한 조건으로 데이터 조회*/
SELECT * FROM EMP WHERE DEPTNO=30;
SELECT * FROM EMP WHERE DEPTNO=30 AND JOB='SALESMAN';
SELECT * FROM EMP WHERE DEPTNO=30 OR JOB='CLERK';

SELECT * FROM EMP WHERE SAL * 12 = 36000;
SELECT * FROM EMP WHERE SAL >= 3000;
SELECT * FROM EMP WHERE SAL != 3000;
SELECT * FROM EMP WHERE SAL <> 3000;
SELECT * FROM EMP WHERE NOT SAL = 3000;

SELECT * FROM EMP WHERE JOB IN ('MANAGER','SALESMAN','CLERK');
SELECT * FROM EMP WHERE JOB NOT IN ('MANAGER','SALESMAN','CLERK');

SELECT * FROM EMP WHERE SAL >= 2000 AND SAL <= 3000;
SELECT * FROM EMP WHERE SAL BETWEEN 2000 AND 3000;
SELECT * FROM EMP WHERE SAL NOT BETWEEN 2000 AND 3000;

SELECT * FROM EMP WHERE ENAME LIKE 'S%';
SELECT * FROM EMP WHERE ENAME LIKE '_L%';
SELECT * FROM EMP WHERE ENAME LIKE '%AM%';
SELECT * FROM EMP WHERE ENAME NOT LIKE '%AM%';

SELECT * FROM EMP WHERE COMM = NULL;
SELECT * FROM EMP WHERE COMM IS NULL;
SELECT * FROM EMP WHERE COMM IS NOT NULL;

/* 실습 2-2. 집합 연산자를 이용한 데이터 조회 */
SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP WHERE DEPTNO = 20;

/* 실습 3-1. 다양한 SQL 문자 함수 실습 */
/* LENGTH : 문자 길이 */
SELECT ENAME, LENGTH(ENAME) FROM EMP;
/* UPPER, LOWER : 문자 대소문자 */
SELECT ENAME, UPPER(ENAME), LOWER(ENAME), INITCAP(ENAME) FROM EMP;
/* SUBSTR : 문자 자르기 */
SELECT JOB, SUBSTR(JOB, 1,2), SUBSTR(JOB,3,2), SUBSTR(JOB,5) FROM EMP;
/* INSTR : 문자 위치 */
SELECT 
	INSTR('HELLO ORACLE!','L') AS INSTR_1,
	INSTR('HELLO ORACLE!','L',-1) AS INSTR_2
FROM DUAL;
/* REPLACE : 문자 교체 */
SELECT '010-1234-5678', REPLACE('010-1234-5678', '-', '') FROM DUAL;
/* LPAD, RPAD : 문자 채우기 */
SELECT LPAD('Oracle', 10, '#') AS LPAD, RPAD('Oracle', 10, '*') AS RPAD FROM DUAL;
/* CONCAT : 문자 연결 */
SELECT CONCAT(EMPNO, ENAME) FROM EMP WHERE ENAME = 'SCOTT';
SELECT EMPNO || ENAME FROM EMP WHERE ENAME = 'SCOTT';
/* TRIM : 문자 공백 제거 */
SELECT 
	'[ _Oracle_ ]' AS BEFORE,
	'['|| TRIM(' _Oracle_ ')||']' AS TRIM
FROM DUAL;

/* 실습 3-2. 다양한 SQL 숫자 함수 실습 */
/* SUM : 합계 */
SELECT SUM(SAL) AS 합계 FROM EMP;
/* COUNT : 갯수 */
SELECT COUNT(*) AS 전체갯수 FROM EMP;
SELECT COUNT(COMM) AS COMM_갯수 FROM EMP;
/* AVG : 평균 */
SELECT AVG(SAL) AS 평균 FROM EMP;
/* ROUND : 반올림 */
SELECT 
	ROUND(123.56) AS ROUND,
	ROUND(123.56, 0) AS ROUND_0,
	ROUND(123.56, 1) AS ROUND_1,
	ROUND(123.56, 2) AS ROUND_2
FROM DUAL;
/* CEIL, FLOOR : 소수점 올림, 내림 */
SELECT 
	CEIL(3.14),
	CEIL(3.78),
	FLOOR(3.14),
	FLOOR(3.78)
FROM DUAL;

/* 실습 3-3. SQL 날짜 함수 실습 */
/* SYSDATE : 날짜시간 조회 */
SELECT SYSDATE, SYSDATE - 1, SYSDATE + 1 FROM DUAL;
/* ADD_MONTHS : 몇 개월 이후 날짜 조회 */
SELECT 
	ADD_MONTHS(SYSDATE, 1),
	ADD_MONTHS(SYSDATE, -1)
FROM DUAL;

/* 실습 3-4. SQL 기타 함수 실습 */
/* TO_CHAR : 날짜 데이터를 문자 데이터로 변환 */
SELECT 
	TO_CHAR(SYSDATE, 'YYYY') AS YYYY,
	TO_CHAR(SYSDATE, 'MM') AS MM,
	TO_CHAR(SYSDATE, 'DD') AS DD,
	TO_CHAR(SYSDATE, 'HH24') AS HH24,
	TO_CHAR(SYSDATE, 'MI') AS MI,
	TO_CHAR(SYSDATE, 'SS') AS SS,
	TO_CHAR(SYSDATE, 'YYYY/MM/DD HH24:MI:SS') AS 날짜시간
FROM DUAL;
INSERT INTO EMP VALUES (1001, '김유신', '사원', 7566, TO_CHAR(SYSDATE, 'YYYY/MM/DD'), 3600, NULL, 10);
/* TO_DATE : 문자 데이터를 날짜 데이터로 변환 */
SELECT 
	TO_DATE('20180714', 'YYYY/MM/DD') AS 날짜1,
	TO_DATE('20180714', 'YY-MM-DD') AS 날짜2,
	TO_DATE('20180714', 'YYYY/MM/DD HH24:MI:SS') AS 날짜시간
FROM DUAL;
INSERT INTO EMP VALUES (1002, '김춘추', '사원', 7566, SYSDATE, 3600, NULL, 10);
INSERT INTO EMP VALUES (1003, '장보고', '대리', 7566, TO_DATE(SYSDATE, 'YYYY-MM-DD HH24:MI:SS'), 2600, NULL, 10);
/* NVL, NVL2 : NULL 체크 함수 */
SELECT EMPNO, ENAME, SAL, COMM,
	NVL(COMM, 0),
	NVL2(COMM, 'NULL 아님', 'NULL 맞음')
FROM EMP;

/* 실습 4-1. 그룹화 실습 */
SELECT AVG(SAL), DEPTNO FROM EMP GROUP BY DEPTNO;
SELECT AVG(SAL), DEPTNO FROM EMP GROUP BY DEPTNO, JOB;

/* 실습 4-2. 그룹화 조건 실습 */
SELECT
	DEPTNO,
	JOB,
	AVG(SAL)
FROM EMP
GROUP BY DEPTNO, JOB
HAVING AVG(SAL) >= 2000;
SELECT
	DEPTNO,
	JOB,
	AVG(SAL)
FROM EMP
WHERE SAL <= 3000
GROUP BY DEPTNO, JOB
HAVING AVG(SAL) >= 2000
ORDER BY DEPTNO, JOB;

/* 실습 5-1. 내부 조인 실습 */
SELECT * 
FROM EMP E
JOIN DEPT D
ON E.DEPTNO = D.DEPTNO;
SELECT *
FROM EMP E 
JOIN DEPT D 
USING (DEPTNO);
SELECT *
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO;
SELECT
	E.EMPNO,
	E.ENAME,
	E.JOB,
	E.MGR,
	E.HIREDATE,
	E.SAL,
	E.DEPTNO,
	D.DNAME,
	D.LOC
FROM EMP E
JOIN DEPT D
ON E.DEPTNO = D.DEPTNO
WHERE SAL <= 3000
ORDER BY E.DEPTNO, EMPNO;

/* 실습 5-2. 외부 조인 실습 */
SELECT * FROM EMP E1 LEFT JOIN EMP E2 ON E1.MGR = E2.EMPNO;
SELECT * FROM EMP E1 RIGHT JOIN EMP E2 ON E1.MGR = E2.EMPNO;










